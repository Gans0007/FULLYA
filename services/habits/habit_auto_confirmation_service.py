import logging
from datetime import datetime, timedelta
import pytz
from repositories.habits.habit_repo import get_habits_by_user, get_habit_by_id
from services.confirmations.confirmation_service import (
    process_confirmation,
    send_to_public_chat
)
from services.challenge_service.complete_challenge import complete_challenge

logger = logging.getLogger(__name__)
KYIV_TZ = pytz.timezone("Europe/Kyiv")


async def list_media_habits(user_id: int):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ (habit_id, name) –ø—Ä–∏–≤—ã—á–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á–µ—Ä–µ–∑ –º–µ–¥–∏–∞
    """
    habits = await get_habits_by_user(user_id)
    return [(h.id, h.name) for h in habits if h.confirm_type in ("media", "wake_time")]


async def check_wake_time(habit) -> tuple[bool, str | None]:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –¥–æ–ø—É—Å—Ç–∏–º–æ –¥–ª—è wake_time
    """
    try:
        name = habit.name
        time_part = name.split("–≤")[1].strip()
        wake_time = datetime.strptime(time_part, "%H:%M").time()
        now = datetime.now(KYIV_TZ).time()
        latest_allowed = (datetime.combine(datetime.today(), wake_time) + timedelta(minutes=4)).time()

        if not (wake_time <= now <= latest_allowed):
            return False, (
                f"‚è∞ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å "
                f"{wake_time.strftime('%H:%M')} –¥–æ {latest_allowed.strftime('%H:%M')}.\n–°–µ–≥–æ–¥–Ω—è —É–∂–µ –ø–æ–∑–¥–Ω–æ."
            )
        return True, None
    except Exception:
        return False, "‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤—Ä–µ–º—è –ø–æ–¥—ä–µ–º–∞."


async def confirm_selected_habit(user, habit_id: int, file_id: str, file_type: str, bot):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –º–µ–¥–∏–∞.
    """
    habit = await get_habit_by_id(habit_id)
    if not habit:
        return "‚ùå –ü—Ä–∏–≤—ã—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
    if habit.confirm_type == "wake_time":
        ok, error = await check_wake_time(habit)
        if not ok:
            return error

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    progress_increased = await process_confirmation(
        user_id=user.id,
        habit_id=habit_id,
        file_id=file_id,
        file_type=file_type,
        bot=bot
    )

    await send_to_public_chat(
        user=user,
        habit_id=habit_id,
        file_id=file_id,
        file_type=file_type,
        bot=bot
    )

    if progress_increased:
        habit = await get_habit_by_id(habit_id)
        if habit.is_challenge and int(habit.done_days) >= int(habit.days):
            await complete_challenge(habit_id, user.id, bot)
            return "üèÜ –ß–µ–ª–ª–µ–Ω–¥–∂ –∑–∞–≤–µ—Ä—à—ë–Ω!"

    return (
        "‚úÖ –ü—Ä–∏–≤—ã—á–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±–Ω–æ–≤–ª—ë–Ω."
        if progress_increased
        else "‚ôªÔ∏è –í–∏–¥–µ–æ/—Ñ–æ—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ! –ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ –∏–∑–º–µ–Ω—ë–Ω."
    )
