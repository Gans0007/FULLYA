import logging
from repositories.habits.habit_repo import (
    delete_habit_by_id,
    get_habit_by_id,
    should_show_delete_button,
)
from services.confirmations.confirmation_service import was_confirmed_today
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

logger = logging.getLogger(__name__)

async def request_delete_confirmation(habit_id: int):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ", callback_data=f"confirm_delete_{habit_id}"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_delete")
    ]])
    return "‚ö†Ô∏è –¢—ã —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –ø—Ä–∏–≤—ã—á–∫—É?", keyboard


async def perform_delete(habit_id: int):
    """
    –£–¥–∞–ª—è–µ—Ç –ø—Ä–∏–≤—ã—á–∫—É.
    """
    await delete_habit_by_id(habit_id)
    return "‚úÖ –ü—Ä–∏–≤—ã—á–∫–∞ —É–¥–∞–ª–µ–Ω–∞."


async def restore_habit_card(user_id: int, habit_id: int):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–∏–≤—ã—á–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã —É–¥–∞–ª–µ–Ω–∏—è.
    """
    habit = await get_habit_by_id(habit_id)
    if not habit:
        return None, "‚ùå –ü—Ä–∏–≤—ã—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."

    percent = round((habit.done_days / habit.days) * 100) if habit.days > 0 else 0
    title = "üî•<b>–ê–∫—Ç–∏–≤–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂:</b>" if habit.is_challenge else "‚ö°Ô∏è<b>–ê–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–∏–≤—ã—á–∫–∞:</b>"

    text = (
        f"{title}\n\n"
        f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {habit.name}\n"
        f"<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {habit.description}\n"
        f"<b>–ü—Ä–æ–≥—Ä–µ—Å—Å:</b> {habit.done_days} –∏–∑ {habit.days} –¥–Ω–µ–π  <b>( {percent}% ) </b>"
    )

    # –ö–Ω–æ–ø–∫–∏
    buttons = [
        InlineKeyboardButton(
            text="‚ôªÔ∏è –ü–µ—Ä–µ–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" if await was_confirmed_today(user_id, habit_id) else "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
            callback_data=f"confirm_done_{habit_id}"
        )
    ]

    if await should_show_delete_button(user_id, habit_id):
        buttons.append(
            InlineKeyboardButton(
                text="üóë –£–¥–∞–ª–∏—Ç—å",
                callback_data=f"delete_habit_{habit_id}"
            )
        )

    reply_markup = InlineKeyboardMarkup(inline_keyboard=[buttons])
    return reply_markup, text
