from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from repositories.habits.habit_repo import get_habit_by_id
from repositories.confirmations.confirmation_repo import was_confirmed_today
from repositories.habits.habit_repo import should_show_delete_button

async def render_habit_card(message: Message, user_id: int, habit_id: int):
    habit = await get_habit_by_id(habit_id)
    if not habit:
        await message.edit_text("‚ùå –ü—Ä–∏–≤—ã—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    # –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    try:
        done_days = int(habit.done_days)
        days = int(habit.days)
        percent = round((done_days / days) * 100) if days > 0 else 0
    except (ZeroDivisionError, ValueError):
        percent = 0

    # –¢–µ–∫—Å—Ç
    text = (
        f"‚ö°Ô∏è–ê–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–∏–≤—ã—á–∫–∞:\n\n"
        f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {habit.name}\n"
        f"<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {habit.description or '‚Äî'}\n"
        f"<b>–ü—Ä–æ–≥—Ä–µ—Å—Å:</b> {habit.done_days} –∏–∑ {habit.days} –¥–Ω–µ–π  ({percent}%)"
    )

    # –ö–Ω–æ–ø–∫–∏
    buttons = []

    if not habit.is_challenge and done_days == days:
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∞ ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ó–∞–≤–µ—Ä—à–∏—Ç—å/–ü—Ä–æ–¥–ª–∏—Ç—å
        buttons.append(InlineKeyboardButton(text="ü´† –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data=f"complete_habit_{habit_id}"))
        buttons.append(InlineKeyboardButton(text="ü´° –ü—Ä–æ–¥–ª–∏—Ç—å", callback_data=f"extend_habit_{habit_id}"))
    else:
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        if habit.confirm_type == "wake_time":
            confirm_text = "‚è∞ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å (–¥–æ +4 –º–∏–Ω)"
        elif await was_confirmed_today(user_id, habit_id):
            confirm_text = "‚ôªÔ∏è –ü–µ—Ä–µ–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
        else:
            confirm_text = "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
        buttons.append(InlineKeyboardButton(text=confirm_text, callback_data=f"confirm_done_{habit_id}"))

        # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        if await should_show_delete_button(user_id, habit_id):
            buttons.append(InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_habit_{habit_id}"))

    # –ü–æ–∫–∞–∑
    markup = InlineKeyboardMarkup(inline_keyboard=[buttons])
    await message.edit_text(text, reply_markup=markup, parse_mode="HTML")
