from db.db import database
from aiogram import Bot


async def complete_challenge(habit_id: int, user_id: int, bot: Bot):
    # –ü–æ–ª—É—á–∞–µ–º challenge_id –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –ø—Ä–∏–≤—ã—á–∫–∏
    row = await database.fetch_one("""
        SELECT challenge_id, name, days, done_days
        FROM habits
        WHERE id = :habit_id AND user_id = :user_id
    """, {"habit_id": habit_id, "user_id": user_id})

    if not row or not row["challenge_id"]:
        return

    challenge_id = row["challenge_id"]
    name = row["name"]
    total_days = row["days"]
    done_days = row["done_days"]

    # 1. –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ —á–µ–ª–ª–µ–Ω–¥–∂–∞
    await database.execute("""
        INSERT INTO completed_challenges (user_id, challenge_id, completed_at)
        VALUES (:user_id, :challenge_id, CURRENT_TIMESTAMP)
    """, {
        "user_id": user_id,
        "challenge_id": challenge_id
    })

    # 2. –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö —á–µ–ª–ª–µ–Ω–¥–∂–µ–π
    await database.execute("""
        UPDATE users
        SET finished_challenges = finished_challenges + 1
        WHERE user_id = :user_id
    """, {"user_id": user_id})

    # 3. –£–¥–∞–ª—è–µ–º –ø—Ä–∏–≤—ã—á–∫—É
    await database.execute("""
        DELETE FROM habits
        WHERE id = :habit_id AND user_id = :user_id
    """, {"habit_id": habit_id, "user_id": user_id})

    # 4. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    await bot.send_message(
        user_id,
        f"üèÜ <b>–ß–µ–ª–ª–µ–Ω–¥–∂ ¬´{name}¬ª –∑–∞–≤–µ—Ä—à—ë–Ω!</b>\n\n"
        f"<b>{done_days} –∏–∑ {total_days} –¥–Ω–µ–π</b> –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.\n"
        f"–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤–∑—è—Ç—å –Ω–æ–≤—ã–π –≤—ã–∑–æ–≤ üí™",
        parse_mode="HTML"
    )
